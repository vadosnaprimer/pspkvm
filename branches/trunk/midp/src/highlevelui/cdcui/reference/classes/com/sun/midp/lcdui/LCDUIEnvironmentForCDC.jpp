/*
 * Copyright  1990-2007 Sun Microsystems, Inc. All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version
 * 2 only, as published by the Free Software Foundation.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License version 2 for more details (a copy is
 * included at /legal/license.txt).
 * 
 * You should have received a copy of the GNU General Public License
 * version 2 along with this work; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA
 * 
 * Please contact Sun Microsystems, Inc., 4150 Network Circle, Santa
 * Clara, CA 95054 or visit www.sun.com if you need additional
 * information or have any questions.
 */

package com.sun.midp.lcdui;

import com.sun.midp.security.*;
import com.sun.midp.events.EventQueue;

// #ifdef ENABLE_GCI
import com.sun.me.gci.windowsystem.*;
import com.sun.me.gci.windowsystem.event.*;
// #endif ENABLE_GCI

/**
 * Initialize the LCDUI environment that
 * initializes gci event lister when run on top of GCI.
 */
public class LCDUIEnvironmentForCDC extends LCDUIEnvironment {

    /**
     * Creates lcdui event producers/handlers/lisneners.
     * 
     * @param internalSecurityToken
     * @param eventQueue
     * @param isolateId
     * @param foregroundController
     */
    public LCDUIEnvironmentForCDC(SecurityToken internalSecurityToken,
                                  EventQueue eventQueue, 
                                  int isolateId,
                                  ForegroundController foregroundController) {

        super(internalSecurityToken, eventQueue, 
              isolateId, foregroundController);

        // #ifdef ENABLE_GCI
            GCIGraphicsEnvironment gciEnv = 
                GCIGraphicsEnvironment.getInstance();
            GCIEventManager gciEvMgr = gciEnv.getEventManager();
            gciEvMgr.startEventLoop();

            GCIEventListener gciEvLst = new GCIEventListener(eventQueue);
            gciEvMgr.setKeyListener(gciEvLst);
            gciEvMgr.setPointerListener(gciEvLst);
        // #endif ENABLE_GCI
    }
}