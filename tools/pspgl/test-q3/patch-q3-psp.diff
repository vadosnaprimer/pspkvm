diff -rpu --strip-trailing-cr quake3-1.32b.orig/code/bspc/l_utils.h quake3-1.32b/code/bspc/l_utils.h
--- quake3-1.32b.orig/code/bspc/l_utils.h	2005-08-24 00:22:29.000000000 +0200
+++ quake3-1.32b/code/bspc/l_utils.h	2005-08-24 00:27:40.000000000 +0200
@@ -49,6 +49,10 @@ Foundation, Inc., 51 Franklin St, Fifth 
 //absolute value
 #define FloatAbs(x)		(*(float *) &((* (int *) &(x)) & 0x7FFFFFFF))
 #define IntAbs(x)			(~(x))
+
+/* in /usr/local/pspdev/lib/gcc/psp/4.0.0/../../../../psp/include/ctype.h, we should rather fix the toolchain!! */
+#undef _X
+
 //coordinates
 #define _X		0
 #define _Y		1
diff -rpu --strip-trailing-cr quake3-1.32b.orig/code/client/cl_ui.c quake3-1.32b/code/client/cl_ui.c
--- quake3-1.32b.orig/code/client/cl_ui.c	2005-08-24 00:22:32.000000000 +0200
+++ quake3-1.32b/code/client/cl_ui.c	2005-08-24 01:18:17.000000000 +0200
@@ -1161,19 +1161,9 @@ void CL_InitUI( void ) {
 
 	// sanity check
 	v = VM_Call( uivm, UI_GETAPIVERSION );
-	if (v == UI_OLD_API_VERSION) {
-//		Com_Printf(S_COLOR_YELLOW "WARNING: loading old Quake III Arena User Interface version %d\n", v );
-		// init for this gamestate
-		VM_Call( uivm, UI_INIT, (cls.state >= CA_AUTHORIZING && cls.state < CA_ACTIVE));
-	}
-	else if (v != UI_API_VERSION) {
-		Com_Error( ERR_DROP, "User Interface is version %d, expected %d", v, UI_API_VERSION );
-		cls.uiStarted = qfalse;
-	}
-	else {
-		// init for this gamestate
-		VM_Call( uivm, UI_INIT, (cls.state >= CA_AUTHORIZING && cls.state < CA_ACTIVE) );
-	}
+
+	Com_Printf(S_COLOR_YELLOW "User Interface is version %d, expected %d\n", v, UI_API_VERSION);
+	VM_Call( uivm, UI_INIT, (cls.state >= CA_AUTHORIZING && cls.state < CA_ACTIVE) );
 }
 
 qboolean UI_usesUniqueCDKey() {
diff -rpu --strip-trailing-cr quake3-1.32b.orig/code/game/q_shared.h quake3-1.32b/code/game/q_shared.h
--- quake3-1.32b.orig/code/game/q_shared.h	2005-08-24 00:22:36.000000000 +0200
+++ quake3-1.32b/code/game/q_shared.h	2005-08-24 00:27:40.000000000 +0200
@@ -324,8 +324,49 @@ static float LittleFloat (const float *l
 
 #endif
 
+
+//============= generic POSIX/gcc DEFINES =====================
+#ifndef CPUSTRING  /* none of the above, use generic POSIX/gcc */
+
+#define stricmp strcasecmp
+
+#define MAC_STATIC
+#define ID_INLINE inline 
+#define	QDECL
+
+#define	PATH_SEP '/'
+
+#if defined(__BIG_ENDIAN__)
+	#define CPUSTRING       "Generic/BigEndian"
+	#define BigShort
+	static ID_INLINE short LittleShort( short l) { return ShortSwap(l); }
+	#define BigLong
+	static ID_INLINE int LittleLong(int l) { return LongSwap(l); }
+	#define BigFloat
+	static ID_INLINE float LittleFloat (const float l) { return FloatSwap(&l); }
+#elif defined(__LITTLE_ENDIAN__)
+	#define CPUSTRING       "Generic/LittleEndian"
+	static ID_INLINE short BigShort( short l) { return ShortSwap(l); }
+	#define LittleShort
+	static ID_INLINE int BigLong(int l) { return LongSwap(l); }
+	#define LittleLong
+	static ID_INLINE float BigFloat (const float l) { return FloatSwap(&l); }
+	#define LittleFloat
+#else
+	#error unknown endianess!!
+#endif
+
+/* required for static linking */
+#define	GAME_HARD_LINKED
+#define	CGAME_HARD_LINKED
+#define	UI_HARD_LINKED
+#define	BOTLIB_HARD_LINKED
+
+#endif
 //=============================================================
 
+
+
 typedef unsigned char 		byte;
 
 typedef enum {qfalse, qtrue}	qboolean;
diff -rpu --strip-trailing-cr quake3-1.32b.orig/code/qcommon/common.c quake3-1.32b/code/qcommon/common.c
--- quake3-1.32b.orig/code/qcommon/common.c	2005-08-24 00:22:42.000000000 +0200
+++ quake3-1.32b/code/qcommon/common.c	2005-08-24 00:27:40.000000000 +0200
@@ -30,9 +30,11 @@ Foundation, Inc., 51 Franklin St, Fifth 
 #if defined(MACOS_X)
 #include <netinet/in.h>
 #else
+#ifdef _WIN32
 #include <winsock.h>
 #endif
 #endif
+#endif
 
 int demo_protocols[] =
 { 66, 67, 68, 0 };
diff -rpu --strip-trailing-cr quake3-1.32b.orig/code/qcommon/vm.c quake3-1.32b/code/qcommon/vm.c
--- quake3-1.32b.orig/code/qcommon/vm.c	2005-08-24 00:22:43.000000000 +0200
+++ quake3-1.32b/code/qcommon/vm.c	2005-08-24 00:27:40.000000000 +0200
@@ -441,6 +441,9 @@ vm_t *VM_Create( const char *module, int
 	int			i, remaining;
 	char		filename[MAX_QPATH];
 
+/* XXX FIXME!!! we should rather solve this using #defines or config variables */
+interpret = 1;
+
 	if ( !module || !module[0] || !systemCalls ) {
 		Com_Error( ERR_FATAL, "VM_Create: bad parms" );
 	}
