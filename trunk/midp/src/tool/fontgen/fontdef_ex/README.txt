README.TXT for fontdef_ex in fontgen
------------------------------------

Current as of November 11, 2009


This directory contains the ascii art font bitmap definitions from which the built-in font for PSPKVM is compiled. See the script ../src/build_tables.sh which reads these and from them builds the file midp/src/lowlevelui/graphics/gx_putpixel/native/gxj_font_bitmap.c, which in-turn defines the bitmaps at runtime.


Contents (as of this writing)
-----------------------------

page_00.txt -- Unicode page 0x00 defining codepoints 0x0000-0x00ff
	(Basic Latin)
	(recovered from original bitfields using rdfont_2.c)
	
page_01.txt -- Unicode page 0x01 defining codepoints 0x0100-0x01ff
	(Latin Extended 1)
	(hand-drawn glyphs)

page_03.txt -- Unicode page 0x03 defining codepoints 0x0486-0x04ce
	(Greek, Coptic)
	(hand-drawn glyphs)

page_04.txt -- Unicode page 0x04 defining codepoints 0x0400-0x045f
	(Cyrillic)
	(hand-drawn glyphs)

page_20.txt -- Unicode page 0x20 defining codepoints 0x2010-0x20ac
	(Typographer's symbols, Currency symbols) 
	(hand-drawn glyphs)
	
page_21-page_26.txt -- Unicode pages 0x21 to 0x26 defining various codepoints
	(Misc. symbols)
	(extracted from 0.5.4 release original bitfields--formerly in CJK-map order--and converted to Unicode order using rdfont_3)

page_30-page_33.txt -- Unicode pages 0x30 to 0x33 defining various codepoints
	(CJK punctuation, other misc. symbols)
	(extracted from 0.5.4 release original bitfields--formerly in CJK-map order--and converted to Unicode order using rdfont_3)

page_4e-page_99.txt -- Unicode pages 0x4e to 0x9f defining codepoints 0x4e00 to 0x9fa5
	(Han unification pages--Chinese, Japanese, Korean ideographs)
	(extracted from 0.5.4 release original bitfields--formerly in CJK-map order--and converted to Unicode order using rdfont_3)

page_e0.txt -- Unicode page 0xe000-x0e030
	(Custom user page--in the PSPKVM map, contains various system symbols)
	(hand-drawn glyphs)

page_f9-page_fa.txt -- Unicode pages 0xf9 to 0xfa defining various codepoints
	(CJK extensions, misc. symbols)
	(extracted from 0.5.4 release original bitfields--formerly in CJK-map order--and converted to Unicode order using rdfont_3)

page_fe-page_ff.txt -- Unicode pages 0xfe to 0xff defining various codepoints
	(CJK punctuation, misc. symbols)
	(extracted from 0.5.4 release original bitfields--formerly in CJK-map order--and converted to Unicode order using rdfont_3)


Adding additional symbols/modifying symbols
-------------------------------------------

To add glyphs to current pages, you should edit the pages themselves. That is, if you wish to add a bitmap for codepoint 0xe050, and the file page_e0.txt already exists, you should modify that table. To add glyphs in Unicode pages which are not yet defined (ie., you wish to add glyph 0x0742, and page_07.txt does not exist), you should add the page. Pages may only cover blocks with the same higher byte (ie. 0xe000 to 0xe0ff are all a member of the same page, 0xe100 is a member of the next page), and pages may not be split between files. However, files need not cover the entire (lower byte) range 00 to ff within the page--see the low_code_first and low_code_last bytes defined in the headers--these specify the range the file actually covers.

See also ../src/gen_blanks.pl for a Perl script that generates blank pages in this format for filling in. Note also that while the gen_blanks.pl tool generates full pages (range 00 to ff in the low bit), the framework for these fonts does permit smaller ranges as of this writing, as noted above. Edit low_code_first and low_code_last in the header by hand and delete glyphs outside this range to generate valid tables containing smaller sets. Note also that undefined glyphs within the defined range should be left as the 'default glyph' character generated by the gen_blanks.pl script. At runtime, characters at codepoints not defined in any page will be rendered by the default glyph at position 0 in page 0 (0x0000), as is the common practice in text rendering subsystems.

As of this writing, each generated page must have all glyphs the same width. It is no longer necessary, however, to modify the char_width function in gxj_text.c -- the function now picks up bitmap widths directly from the generated tables.

Once you have edited the pages, run ./build_tables.sh from the ../src directory, which regenerates midp/src/lowlevelui/graphics/gx_putpixel/native/gxj_font_bitmap.c. Then run ./build-psp-cldc.sh -m from the pspkvm srouce tree root to rebuild the MIDP components, and then finally build the binary in the pspkvm/psp directory using the makefile therein.
